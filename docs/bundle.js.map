{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://london_quiz/./src/js/index.js","webpack://london_quiz/./src/js/modules/checkAnswersFunctionality.js","webpack://london_quiz/./src/js/modules/divResultFunctionality.js","webpack://london_quiz/./src/js/modules/retrievingData.js","webpack://london_quiz/./src/js/modules/transitionsTabs.js","webpack://london_quiz/webpack/bootstrap","webpack://london_quiz/webpack/runtime/define property getters","webpack://london_quiz/webpack/runtime/hasOwnProperty shorthand","webpack://london_quiz/webpack/runtime/make namespace object","webpack://london_quiz/webpack/before-startup","webpack://london_quiz/webpack/startup","webpack://london_quiz/webpack/after-startup"],"sourcesContent":["\n\n\n// ***************************************  buildResultDiv builds the final div **********************************************\nimport {buildResultDiv } from \"./modules/divResultFunctionality\";\n\n// **  retrievingQuestion function fetch the firebase firestore questions databe, it retrieves a certain amount of questions **\n// **  AMOUNT_QUESTIONS_QUIZ and storates in the dbQuestions variable  ********************* **********************************\nimport {retrievingQuestions, dbQuestions, AMOUNT_QUESTIONS_QUIZ, getImageQuestion} from \"./modules/retrievingData\";\n\n// **  transition between tabs applying css property display: none and removing it respectively   *****************************\nimport {\n  hideStartDiv_showQuestionDiv,\n  hideQuestionDiv_showCheckAnswerDiv, \n  hideCheckAnswerDiv_showQuestionDiv, \n  hideAnswerDiv_showResultsDiv } from \"./modules/transitionsTabs\";\n\n// * this function is call at the Event handler to check whether and answer is correct and to apply some features **************\n// *  css to checkAnswerDiv and to calculate the score)       ******************************************************************\nimport {checkAnswerFunctionality} from \"./modules/checkAnswersFunctionality\";\n\n \n// ***************************************  DECLARING GLOBAL VARIABLES AND CONSTANTS  ***********************************************************\n\n//*  jQuery constants (HTML elements)\nconst $startDiv = $('#startDiv');\nconst $question = $('#question');                                              \nconst $choices = $('.answerOption');                                              \nconst $questionDiv = $('#questionDiv');                                        \nconst $resultsDiv = $('#resultsDiv');                                                 \nconst $checkAnswerDiv = $('#checkAnswerDiv'); \nconst $imgQuestion = $('#imgQuestion'); \n\n// * INITIALING VARIABLES\n\nlet questionCounter = 0;\nlet availableQuestions = [];\nlet currentQuestion = {};\nlet lastQuestionFlag = false;\n\n// * DECLARING VARIABLES IN LOCALSTORAGE\nlocalStorage.setItem(\"acceptingAnswers\", false);\nlocalStorage.setItem(\"score\", 0);\n\n// * global variable to calculate the points based in the time the user takes to click the option button,\n// *   I declare it globaly as it has to be accessed for more the one functions.\nlet startTime = new Date();  \n\n\n\n// !(1) to launch the game setting up inline style ==> display: none to all the container tabs except #startDiv.\n\n$('.container').not('#startDiv').css('display', 'none');\n\n // * jQuery Event handler to the Start button to start the game\n$('#startBTN').on('click', function(){\n  hideStartDiv_showQuestionDiv();\n});\n\n\n\n\n// * Retrieve n number of random questions from the total document questions in a Firebase collection called 'questions'.\ndocument.addEventListener(\"DOMContentLoaded\", retrievingQuestions());\n\n\n\n// ! STARTGAME FUNCTION\n// * I've turned it from an arrow function to a default function as it didn't work when I added type=\"module\" to the index.js script in the embedded html  \nfunction startGame(){\n  availableQuestions = [...dbQuestions];\n  getNewQuestion();\n}\n\n// ! GETNEWQUESTION FUNCTION \nfunction getNewQuestion (){\n\n  if(availableQuestions.length === 0 || questionCounter >= AMOUNT_QUESTIONS_QUIZ){\t\n      lastQuestionFlag = true;\n      buildResultDiv($resultsDiv, localStorage.getItem(\"score\"));\n  } else {\n    questionCounter++;\n\n    const questionIndex = Math.floor(Math.random() * availableQuestions.length);\n    currentQuestion = availableQuestions[questionIndex];\n\n    // * jQuery method to set up the text inside dd ORDINAL element and h1 question. \n    $question.html(`<dd>${questionCounter}/${AMOUNT_QUESTIONS_QUIZ}</dd><h1>${currentQuestion.question}</h1>`);\n    \n    $choices.each( function () {                             //* jQuery method each goes throught each .answerOption ($choices) element\n      const number = this.dataset['number'];                 //* getting its data-number attr and with that gets the currentQuestion.\n      $(this).text(currentQuestion[\"option\" + number]);  \n    });\n\n\n    getImageQuestion(currentQuestion);\n\n    availableQuestions.splice(questionIndex, 1);    \n    localStorage.setItem(\"acceptingAnswers\", true); \n  }\n\n}\n\n\n//! EVENT LISTENER ATTACH TO CHOICE (ARRAY OF OPTIONS)\n  $choices.on(\"click\", e => {\n\n      checkAnswerFunctionality(e);\n       \n      //* to hide questinDiv and show the checkAnswerDiv\n      hideQuestionDiv_showCheckAnswerDiv();\n\n      getNewQuestion();\n\n      setTimeout(() => { \n          if(!lastQuestionFlag){\n            //* to hide questinDiv and show the checkAnswerDiv\n            hideCheckAnswerDiv_showQuestionDiv();\n            startTime = new Date();\n          } else {\n            //* to hide questinDiv and show the checkAnswerDiv\n            hideAnswerDiv_showResultsDiv();\n            setTimeout(() => { window.location.reload()}, 8000); //* reload the web application to start\n          }         \n          \n        } , 2000);\n\n});\n\n\n\n\n// * Start the game.\nsetTimeout(() => {startGame()}, 500);\n\n\n\n\n// * exporting jquery element variables to be used by transitionsTabs // and $imgQuestion by retrievingData.js \nexport {$startDiv, $questionDiv, $checkAnswerDiv, $resultsDiv, $imgQuestion};\n\n// * exporting variables to be used by checkAnswerFunctionality ***********************************************************\nexport {currentQuestion, startTime};\n","\nimport {currentQuestion, \n        $checkAnswerDiv,\n        emoji,\n        startTime} from \"../index\";\n\n// * CALCULATESCORE FUNCTION subtracs the time that user takes to answers the question to 10000 ms if the answer is correct.\n// * if the time passes over 10000 ms the number of points will be set up to 100.\nfunction calculateScore(){\n  const timeTakes = (new Date() - startTime);\n  return  (timeTakes > 10000) ? 100 : 10000 - timeTakes;\n} \n\n\nfunction checkAnswerFunctionality(event)  {\n    if(!(localStorage.getItem(\"acceptingAnswers\"))) return;\n    localStorage.setItem(\"acceptingAnswers\", false);\n    const selectedOption = event.target.innerText;\n    if(selectedOption == currentQuestion.correct){\n        let newScore = Number(localStorage.getItem(\"score\"));\n        newScore += calculateScore();\n        localStorage.setItem(\"score\", newScore);\n      $checkAnswerDiv.removeClass('wrong').addClass('correct');\n      $checkAnswerDiv.find('#emoji').text ('ðŸ’‚');; \n    } else {\n      $checkAnswerDiv.removeClass('correct').addClass('wrong');\n      $checkAnswerDiv.find('#emoji').text ('ðŸ’©');\n    }\n    $checkAnswerDiv.find('#score').find('p').text(`${Number(localStorage.getItem(\"score\"))}`) ; \n}\n\nexport {checkAnswerFunctionality} ","\n//* object with the info needed to build result div\nconst myResults = [\n\n    {queenPic: `img/queen_faces/queen0.png`,\n     queenSays: `I'm shocked about your lack of knowledge, you are rubish!!`,\n     picSrc: `img/awards pics/square/dunce.jpg`},\n  \n    {queenPic: `img/queen_faces/queen1.png`,\n     queenSays: `Not bad, I'll name you Member of the Order of the British Empire!`,\n     picSrc: `img/awards pics/square/mbe-medal.png`},\n  \n    {queenPic: `img/queen_faces/queen2.png`,\n    queenSays: `I'm impressed with you, I'll name you Officer of the Order of the British Empire!`,\n    picSrc: `img/awards pics/square/obe-medal.png`},\n  \n    {queenPic: `img/queen_faces/queen3.png`,\n    queenSays: `you are brilliant, I'll name you Commander of the Order of the British Empire!`,\n    picSrc: `img/awards pics/square/cbe-medal.jpg`},\n  ];\n\n//* return a value depending on the totalPoint variable.\nfunction calculateLevel(score){   \n  if (score >= 90000){return 3;}\n    else if (score >= 60000){return 2;}\n      else if (score >= 30000){return 1;}\n      return 0;\n} \n\nfunction buildResultDiv(div, score){  \n  let level = calculateLevel(score);\n  \n  div.find('.badge').find('h1').text(`${score}`);\n  div.find('.badge').find('img#award').attr('src', myResults[level].picSrc);\n\n  div.find('img#queen').attr('src', myResults[level].queenPic);\n  div.find('#queenSentence').text(`${myResults[level].queenSays}`);\n}\n\n\n\n  export { myResults, calculateLevel, buildResultDiv };","\nimport {$imgQuestion} from \"../index\";\n\n\n// * constants for randomly choose the questions from firebase database.\nconst AMOUNT_QUESTIONS_QUIZ = 10;\nconst AMOUNT_QUESTIONS_COLLECTION = 50;\n\n//* global variable to store the question from the Firebase database (it remains immutable).\nlet dbQuestions = [];\n\n\n// * return an array with an amount(numberOfQuestion) of different random numbers from 0 to totalQuestions.\nfunction codeNumberQuestionArray(numberOfQuestions, totalQuestions){\n    let array = [];\n    while(array.length < numberOfQuestions){\n       let randomNumber = Math.floor(Math.random() * totalQuestions);\n       if(!array.includes(randomNumber)){array.push(randomNumber)}\n    }\n    return array;\n  }\n\n\n\nfunction retrievingQuestions( ){\n \n  firebase.app();\n\n  const db = firebase.firestore();\n\n  let array  = codeNumberQuestionArray(AMOUNT_QUESTIONS_QUIZ, AMOUNT_QUESTIONS_COLLECTION);\n\n  array.forEach( element => {\n      db.collection(\"questions\").where(\"CodeNumber\", \"==\", element)\n      .get()\n      .then(function(querySnapshot) {\n          querySnapshot.forEach(function(doc) {\n              dbQuestions.push(doc.data());\n          });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      });\n  });\n}\n\n//* function helper to retrieve the image from the firebase database and set the background-image inline css property.\nfunction getImageQuestion (currentQuestion) {\n    let storage = firebase.storage();\n  \n    let gsReference = storage.refFromURL(`gs://londonquiz-f8499.appspot.com/${currentQuestion['pic']}`);\n  \n    gsReference.getDownloadURL()\n    .then(function(url) {$imgQuestion.attr('src', `${url}`).attr('alt', `${currentQuestion['pic']}`)})\n    .catch(function(error) {console.log(`an error happened when trying to access the image => ${error}`)});\n  }\n\n\nexport {retrievingQuestions, dbQuestions, AMOUNT_QUESTIONS_QUIZ, getImageQuestion};","\nimport {$startDiv, $questionDiv, $checkAnswerDiv, $resultsDiv} from \"../index\";\n\n //* to hide questinDiv and show the checkAnswerDiv\n function hideStartDiv_showQuestionDiv () {\n    $startDiv.css('display', 'none'); \n    $questionDiv.removeAttr('style');\n}\n//* to hide questinDiv and show the checkAnswerDiv\nfunction hideQuestionDiv_showCheckAnswerDiv () {\n    $questionDiv.css('display', 'none'); \n    $checkAnswerDiv.removeAttr('style');\n}\n\n//* to hide questinDiv and show the checkAnswerDiv\nfunction hideCheckAnswerDiv_showQuestionDiv () {\n    $checkAnswerDiv.css('display', 'none'); \n    $questionDiv.removeAttr('style');\n}\n\n\n//* to hide questinDiv and show the checkAnswerDiv\nfunction hideAnswerDiv_showResultsDiv () {\n    $checkAnswerDiv.css('display', 'none'); \n    $resultsDiv.removeAttr('style');\n}\n\n\n\nexport {hideStartDiv_showQuestionDiv, hideQuestionDiv_showCheckAnswerDiv, hideCheckAnswerDiv_showQuestionDiv, hideAnswerDiv_showResultsDiv }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/js/index.js\");\n",""],"names":[],"sourceRoot":""}